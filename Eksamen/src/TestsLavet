



Opgave 2.1
  test = new Range(new Position(0,0), new Position(5,5));
	  test.makeArray();
	  int i = 0;
	  System.out.println(test.posArray.size());
	  while (i < test.posArray.size()) {
		  System.out.println(test.posArray.get(i).getDescription());
		  i++;
	  }
  }
  
Opgave 2.3
import spreadsheet.Application;
import spreadsheet.Position;
import spreadsheet.Range;
import spreadsheet.Reference;
import spreadsheet.Spreadsheet;
import spreadsheet.arithmetic.Sum;
import spreadsheet.textual.Text;
import ui.PositionInterpreter;
import ui.exception.InvalidPosition;

class Test {

  public static void main(String[] _) {
	  System.out.println("Hej");
	  Position pos = new Position(0,0);
	  Application.instance.set(pos, new Text("Hej"));
	  Reference ref = new Reference(new Spreadsheet(), new Range(pos, new Position(5,5)));
	  System.out.println(ref.getDescription());
	  System.out.println(new Sum(ref).getDescription());
	  System.out.println(Application.instance.get(pos).toInt());
	  System.out.println(ref == null);
	  System.out.println(new Sum(ref));
	  String text = " A0:A5";
	  int indexOfColon = text.indexOf(':');
	  Position pos1 = null;
	try {
		pos1 = PositionInterpreter.interpret(
				  					text.substring(1, indexOfColon));
	} catch (InvalidPosition e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	  Position pos2 = null;
	try {
		pos2 = PositionInterpreter.interpret(
				  					text.substring(indexOfColon+1));
	} catch (InvalidPosition e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	System.out.println(pos1.getDescription());
	System.out.println(pos2.getDescription());
	  System.out.println((new Reference(Application.instance.getWorksheet(),
			  		 new Range(pos1, pos2))).getDescription());
	  System.out.println(new Sum((new Reference(Application.instance.getWorksheet(),
		  		 new Range(pos1, pos2)))).getDescription());
  }
}

Opgave 3
			TEST 1

import spreadsheet.Application;
import spreadsheet.Expression;
import spreadsheet.History;
import spreadsheet.Position;
import spreadsheet.arithmetic.Int;
import spreadsheet.command.NewSpreadsheet;
import spreadsheet.command.Set;

class Test {

	
  public static void main(String[] _) {
	 Position pos = new Position(0,0);
	 Expression exp = new Int(1);
	 Expression exp2 = new Int(2);
	 new Set(pos, exp).execute();
	 new Set(pos, exp2).execute();
	 System.out.println(Application.instance.get(pos));
	 History.instance.pop().undo();
	 System.out.println(Application.instance.get(pos));
	 
	 
	 
	 		TEST 2
	 		
import spreadsheet.Application;
import spreadsheet.Expression;
import spreadsheet.History;
import spreadsheet.Position;
import spreadsheet.arithmetic.Int;
import spreadsheet.command.NewSpreadsheet;
import spreadsheet.command.Set;

class Test {

	
  public static void main(String[] _) {
	 new NewSpreadsheet().execute();
	 System.out.println(Application.instance.getSpreadsheets());
	 History.instance.pop().undo();
	 System.out.println(Application.instance.getSpreadsheets());
  }
}
	 		 		
	 	   TEST 3
	
import spreadsheet.Application;
import spreadsheet.Expression;
import spreadsheet.History;
import spreadsheet.Position;
import spreadsheet.arithmetic.Int;
import spreadsheet.command.NewSpreadsheet;
import spreadsheet.command.Set;

class Test {

	
  public static void main(String[] _) {
	 int i = 0;
	 Position pos = new Position(0,0);
	 Expression exp = new Int(i);
	 new Set(pos, exp).execute();
	 i++;
	 System.out.println(Application.instance.get(pos));
	 while (i <= 20) {	
	 	exp = new Int(i);
	 	new Set(pos, exp).execute();
	 	i++;
	 	System.out.println(Application.instance.get(pos));
	 }
	 i = 0;
	 while (i <= 20) {
		 History.instance.pop().undo();
		 System.out.println(Application.instance.get(pos));
		 i++;
	 }
	 System.out.println(History.instance.pop() == null);
  }
}
	